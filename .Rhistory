install.packages("Mosaic")
plotFun(2*x ~ x, x.lim=range(0,10))
install.packages(c("foreign", "lattice", "Matrix", "mgcv", "nlme", "rpart", "survival"))
install.packages("C:/Users/huangrh.FamilyHuang/Downloads/mosaic_0.8-10.zip", repos = NULL)
library("mosaic", lib.loc="C:/Program Files/R/R-3.0.2/library")
plotFun(x^2 ~ x, x.lim=range(0,10))
detach("package:mosaic", unload=TRUE)
library("mosaic", lib.loc="C:/Program Files/R/R-3.0.2/library")
detach("package:mosaic", unload=TRUE)
library("mosaic", lib.loc="C:/Program Files/R/R-3.0.2/library")
detach("package:mosaic", unload=TRUE)
library("mosaic", lib.loc="C:/Program Files/R/R-3.0.2/library")
detach("package:mosaic", unload=TRUE)
library("mosaic", lib.loc="C:/Program Files/R/R-3.0.2/library")
detach("package:mosaic", unload=TRUE)
library("mosaic", lib.loc="C:/Program Files/R/R-3.0.2/library")
a=c(1,2,3,4)
a
a[a>2]
is.na(a)
is.1(a)
is.na(a)
help(is.na)
b=c(1,2,3,NA)
is.na(b)
c=c(a,2,na,NA)
c=c(a,2,NA,NA)
c=c(a,2,NA,NA)
c
is.na(c)
q()
install.packages("devtools")
library("devtools", lib.loc="C:/Program Files/R/R-3.0.2/library")
q()
install.packages("gdb")
install.packages("gdb")
install.packages("filehash")
library("filehash", lib.loc="C:/Program Files/R/R-3.0.3/library")
install.packages("cacheSweave")
library("cacheSweave", lib.loc="C:/Program Files/R/R-3.0.3/library")
install.packages("rpart")
library("rpart", lib.loc="C:/Program Files/R/R-3.0.3/library")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
install.packages("Hmisc")
library("Hmisc")
install.packages("R2HTML")
library("R2HTML")
library("DBI")
install.packages("DBI")
library("DBI")
install("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL")
install.packages("RMySQL", type = "source")
setwd("C:\\Users\\huangrh.FamilyHuang\\SkyDrive\\CS\\Course\\ds05_ReproducibleResearch\\RepData_PeerAssessment1")
# setwd("/Users/huangrh/SkyDrive/CS/Course/ds05_ReproducibleResearch/RepData_PeerAssessment1")
dataset <- read.csv("activity.csv")
subdata <- dataset[!is.na(dataset$step),]
tail(subdata, 5)
TotalByDay <-aggregate(steps~date, subdata, FUN="sum")
colnames(TotalByDay) <- c("date", "StepsByDay")
TotalByDay$date <- strptime(TotalByDay$date, format = "%Y-%m-%d")
with(TotalByDay, hist(StepsByDay, breaks = 10))
Mean <- mean(as.numeric(TotalByDay$StepsByDay))
Median <- median(as.numeric(TotalByDay$StepsByDay))
cat("Mean =", Mean)
cat("Median =", Median)
dayPattern <- aggregate(steps~interval, subdata, FUN="mean")
dayPattern$interval <- ts(dayPattern$interval)
with(dayPattern, plot(interval, steps, type = "l"))
Time <- dayPattern$interval[dayPattern$steps==max(dayPattern$steps)]
Time2 = sub("((^[0-9]$)|([0-9][0-9]$))", ":\\1", Time+5)
Time = sub("((^[0-9]$)|([0-9][0-9]$))", ":\\1", Time)
cat("The interval containing max number of steps : from ", Time, " to ", Time2)
sum(is.na(dataset$steps))
names(dayPattern)[2] <- "Mean"
imputedSet <- merge(dataset, dayPattern)
imputedSet$steps[is.na(imputedSet$steps)] <- imputedSet$Mean[is.na(imputedSet$steps)]
imputedSet$Mean <- NULL
head(imputedSet, 5)
str(imputedSet)
TotalByDayimputed <-aggregate(steps~date, imputedSet, FUN="sum")
colnames(TotalByDayimputed) <- c("date", "StepsByDay")
# TotalByDay$date <- strptime(TotalByDay$date, format = "%Y-%m-%d")
with(TotalByDayimputed, hist(StepsByDay, breaks = 10))
MeanImputed <- mean(as.numeric(TotalByDayimputed$StepsByDay))
MedianImputed <- median(as.numeric(TotalByDayimputed$StepsByDay))
cat("Mean =", MeanImputed)
cat("Median =", MedianImputed)
TotalByDayimputed
imputedSet$weekday <- weekdays(imputedSet$date)
setwd("C:\\Users\\huangrh.FamilyHuang\\SkyDrive\\CS\\Course\\ds05_ReproducibleResearch\\RepData_PeerAssessment1")
# setwd("/Users/huangrh/SkyDrive/CS/Course/ds05_ReproducibleResearch/RepData_PeerAssessment1")
dataset <- read.csv("activity.csv")
subdata <- dataset[!is.na(dataset$step),]
tail(subdata, 5)
TotalByDay <-aggregate(steps~date, subdata, FUN="sum")
colnames(TotalByDay) <- c("date", "StepsByDay")
TotalByDay$date <- strptime(TotalByDay$date, format = "%Y-%m-%d")
with(TotalByDay, hist(StepsByDay, breaks = 10))
Mean <- mean(as.numeric(TotalByDay$StepsByDay))
Median <- median(as.numeric(TotalByDay$StepsByDay))
cat("Mean =", Mean)
cat("Median =", Median)
#subdata$interval <- as.factor(subdata$interval)
dayPattern <- aggregate(steps~interval, subdata, FUN="mean")
dayPattern$interval <- ts(dayPattern$interval)
with(dayPattern, plot(interval, steps, type = "l"))
Time <- dayPattern$interval[dayPattern$steps==max(dayPattern$steps)]
Time2 = sub("((^[0-9]$)|([0-9][0-9]$))", ":\\1", Time+5)
Time = sub("((^[0-9]$)|([0-9][0-9]$))", ":\\1", Time)
cat("The interval containing max number of steps : from ", Time, " to ", Time2)
sum(is.na(dataset$steps))
names(dayPattern)[2] <- "Mean"
imputedSet <- merge(dataset, dayPattern)
imputedSet$steps[is.na(imputedSet$steps)] <- imputedSet$Mean[is.na(imputedSet$steps)]
imputedSet$Mean <- NULL
head(imputedSet, 5)
str(imputedSet)
TotalByDayimputed <-aggregate(steps~date, imputedSet, FUN="sum")
colnames(TotalByDayimputed) <- c("date", "StepsByDay")
# TotalByDay$date <- strptime(TotalByDay$date, format = "%Y-%m-%d")
with(TotalByDayimputed, hist(StepsByDay, breaks = 10))
MeanImputed <- mean(as.numeric(TotalByDayimputed$StepsByDay))
MedianImputed <- median(as.numeric(TotalByDayimputed$StepsByDay))
cat("Mean =", MeanImputed)
cat("Median =", MedianImputed)
TotalByDayimputed
imputedSet$weekday <- weekdays(imputedSet$date)
imputedSet$weekday <- weekdays(as.numeric(imputedSet$date))
imputedSet$weekday <- weekdays(as.Date(imputedSet$date))
head(imputedSet)
weekdays
weekday
subset(imputedSet, weekday %in% c("Monday", "Friday"))
subset(imputedSet, weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", ))
subset(imputedSet, weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
weekdaySet <- subset(imputedSet, weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekdaySet <- subset(imputedSet, weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
weekdaySet <- subset(imputedSet, weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
weekdaySet <- subset(imputedSet, weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
weekendSet <- subset(imputedSet, weekday %in% c("Saturday", "Sunday"))
weekdayPattern<- aggregate(steps~interval, weekdaySet, FUN="mean")
weekdayPattern <- aggregate(steps~interval, weekdaySet, FUN="mean")
weekendPattern <- aggregate(steps~interval, weekendSet, FUN="mean")
par(mfrow = c(2,1))
with(weekdayPattern, plot(interval, steps, type = "l"))
with(weekendPattern, plot(interval, steps, type = "l"))
par(mfrow = c(1,2))
with(weekdayPattern, plot(interval, steps, type = "l"))
with(weekendPattern, plot(interval, steps, type = "l"))
par(mfrow = c(1,2))
with(weekdayPattern, plot(interval, steps, type = "l", main = "Weekday"))
with(weekendPattern, plot(interval, steps, type = "l", main = "Weekend"))
